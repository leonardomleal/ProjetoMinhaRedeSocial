// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinhaRedeSocial.Infra.Dados;

#nullable disable

namespace MinhaRedeSocial.Infra.Migrations
{
    [DbContext(typeof(DadosContext))]
    partial class DadosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Amigos.Amigo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apelido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Foto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Amigos");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Amigos.Amizade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AmigoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AmigoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Amizades");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Postagens.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PostagemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PostagemId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Postagens.Postagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Curtidas")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Postagens");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Solicitacoes.Solicitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mensagem")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SolicitanteId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SolicitanteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Solicitacoes");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Solicitacoes.Solicitante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apelido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Foto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Solicitantes");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apelido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Foto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Amigos.Amigo", b =>
                {
                    b.HasOne("MinhaRedeSocial.Domain.Models.Usuarios.Usuario", "Usuario")
                        .WithMany("Amigos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Amigos.Amizade", b =>
                {
                    b.HasOne("MinhaRedeSocial.Domain.Models.Amigos.Amigo", "Amigo")
                        .WithMany("Amizades")
                        .HasForeignKey("AmigoId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("MinhaRedeSocial.Domain.Models.Usuarios.Usuario", "Usuario")
                        .WithMany("Amizades")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Amigo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Postagens.Comentario", b =>
                {
                    b.HasOne("MinhaRedeSocial.Domain.Models.Postagens.Postagem", "Postagem")
                        .WithMany("Comentarios")
                        .HasForeignKey("PostagemId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("MinhaRedeSocial.Domain.Models.Usuarios.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Postagem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Postagens.Postagem", b =>
                {
                    b.HasOne("MinhaRedeSocial.Domain.Models.Usuarios.Usuario", "Usuario")
                        .WithMany("Postagens")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Solicitacoes.Solicitacao", b =>
                {
                    b.HasOne("MinhaRedeSocial.Domain.Models.Solicitacoes.Solicitante", "Solicitante")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("MinhaRedeSocial.Domain.Models.Usuarios.Usuario", "Usuario")
                        .WithMany("Solicitacaos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Solicitante");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Solicitacoes.Solicitante", b =>
                {
                    b.HasOne("MinhaRedeSocial.Domain.Models.Usuarios.Usuario", "Usuario")
                        .WithMany("Solicitantes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Amigos.Amigo", b =>
                {
                    b.Navigation("Amizades");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Postagens.Postagem", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Solicitacoes.Solicitante", b =>
                {
                    b.Navigation("Solicitacoes");
                });

            modelBuilder.Entity("MinhaRedeSocial.Domain.Models.Usuarios.Usuario", b =>
                {
                    b.Navigation("Amigos");

                    b.Navigation("Amizades");

                    b.Navigation("Comentarios");

                    b.Navigation("Postagens");

                    b.Navigation("Solicitacaos");

                    b.Navigation("Solicitantes");
                });
#pragma warning restore 612, 618
        }
    }
}
